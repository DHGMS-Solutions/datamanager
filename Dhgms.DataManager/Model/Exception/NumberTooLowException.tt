<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#
System.Collections.Generic.KeyValuePair<string, string>[] classes =
{
    new System.Collections.Generic.KeyValuePair<string, string>("ClrChar","char"),
    new System.Collections.Generic.KeyValuePair<string, string>("ClrDateTime","System.DateTime"),
    new System.Collections.Generic.KeyValuePair<string, string>("ClrDecimal","decimal"),
    new System.Collections.Generic.KeyValuePair<string, string>("ClrDouble","double"),
    new System.Collections.Generic.KeyValuePair<string, string>("ClrSingle","float"),
    new System.Collections.Generic.KeyValuePair<string, string>("Integer16","short"),
    new System.Collections.Generic.KeyValuePair<string, string>("Integer32","int"),
    new System.Collections.Generic.KeyValuePair<string, string>("Integer64","long"),
    new System.Collections.Generic.KeyValuePair<string, string>("UnsignedInteger8","byte")
    // types below not CLS compliant - left out for now
    /*
    new System.Collections.Generic.KeyValuePair<System.String, System.String>("UnsignedInteger16","System.UInt16"),
    new System.Collections.Generic.KeyValuePair<System.String, System.String>("UnsignedInteger32","System.UInt32"),
    new System.Collections.Generic.KeyValuePair<System.String, System.String>("UnsignedInteger64","System.UInt64")
    */
};
#>
// --------------------------------------------------------------------------------------------------------------------
// <copyright company="DHGMS Solutions" file="NumberTooLowException.cs">
//   Copyright 2004-<#=DateTime.Today.Year#> DHGMS Solutions.
//      
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//      
//   http://www.apache.org/licenses/LICENSE-2.0
//      
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
// </copyright>
// <summary>
//   Exceptions for when a number is too low
// </summary>
// --------------------------------------------------------------------------------------------------------------------

namespace Dhgms.DataManager.Model.Exception
{
    using System;
    using System.Runtime.Serialization;
    using System.Security.Permissions;

<#
foreach(System.Collections.Generic.KeyValuePair<string, string> item in classes)
{
#>
    /// <summary>
    /// The number passed in was higher than the allowed maximum
    /// </summary>
    [System.Serializable]
    public class NumberTooLow<#=item.Key#>Exception
        : System.ArgumentOutOfRangeException
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="NumberTooLow<#=item.Key#>Exception" /> class.
        /// </summary>
        public NumberTooLow<#=item.Key#>Exception()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="NumberTooLow<#=item.Key#>Exception" /> class.
        /// </summary>
        /// <param name="message">Exception Message</param>
        public NumberTooLow<#=item.Key#>Exception(string message)
            : base(message)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="NumberTooLow<#=item.Key#>Exception" /> class.
        /// </summary>
        /// <param name="message">Exception Message</param>
        /// <param name="innerException">Inner Exception</param>
        public NumberTooLow<#=item.Key#>Exception(
            string message,
            System.Exception innerException) : base(message, innerException)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="NumberTooLow<#=item.Key#>Exception"/> class. 
        /// </summary>
        /// <param name="parameterName">The name of the parameter causing the exception.</param>
        /// <param name="minimumValid">The minimum valid value.</param>
        /// <param name="actual">The actual value received.</param>
        public NumberTooLow<#=item.Key#>Exception(
            string parameterName,
            <#=item.Value#> minimumValid,
            <#=item.Value#> actual)
            : base(parameterName, "The number specified is too low. Minimum: " + minimumValid + ", Actual: " + actual)
        {
            this.Actual = actual;
            this.MinimumValid = minimumValid;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="NumberTooLow<#=item.Key#>Exception" /> class.
        /// </summary>
        /// <param name="info">The serialization information.</param>
        /// <param name="context">The streaming context.</param>
        protected NumberTooLow<#=item.Key#>Exception(
            System.Runtime.Serialization.SerializationInfo info,
            System.Runtime.Serialization.StreamingContext context)
            : base(info, context)
        {
        }

        /// <summary>
        /// Gets the actual value that cause the exception.
        /// </summary>
        public <#=item.Value#> Actual { get; private set; }

        /// <summary>
        /// Gets the minimum valid value.
        /// </summary>
        public <#=item.Value#> MinimumValid { get; private set; }

        /// <summary>
        /// Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with the invalid argument value and additional exception information.
        /// </summary>
        /// <param name="info">The object that holds the serialized object data. </param><param name="context">An object that describes the source or destination of the serialized data. </param><exception cref="T:System.ArgumentNullException">The <paramref name="info"/> object is null. </exception><filterpriority>2</filterpriority><PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*"/></PermissionSet>
        [SecurityPermission(SecurityAction.Demand, SerializationFormatter = true)]
        public override void GetObjectData(SerializationInfo info, StreamingContext context)
        {
            base.GetObjectData(info, context);
            info.AddValue("Actual", this.Actual);
            info.AddValue("MinimumValid", this.MinimumValid);
        }
    }

<#
}
#>}