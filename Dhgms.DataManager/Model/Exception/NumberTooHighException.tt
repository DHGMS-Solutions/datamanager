<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#
System.Collections.Generic.KeyValuePair<string, string>[] classes =
{
    new System.Collections.Generic.KeyValuePair<string, string>("ClrChar","char"),
    new System.Collections.Generic.KeyValuePair<string, string>("ClrDateTime","System.DateTime"),
    new System.Collections.Generic.KeyValuePair<string, string>("ClrDecimal","decimal"),
    new System.Collections.Generic.KeyValuePair<string, string>("ClrDouble","double"),
    new System.Collections.Generic.KeyValuePair<string, string>("ClrSingle","float"),
    new System.Collections.Generic.KeyValuePair<string, string>("Integer16","short"),
    new System.Collections.Generic.KeyValuePair<string, string>("Integer32","int"),
    new System.Collections.Generic.KeyValuePair<string, string>("Integer64","long"),
    new System.Collections.Generic.KeyValuePair<string, string>("UnsignedInteger8","byte")
    // types below not CLS compliant - left out for now
    /*
    new System.Collections.Generic.KeyValuePair<System.String, System.String>("UnsignedInteger16","System.UInt16"),
    new System.Collections.Generic.KeyValuePair<System.String, System.String>("UnsignedInteger32","System.UInt32"),
    new System.Collections.Generic.KeyValuePair<System.String, System.String>("UnsignedInteger64","System.UInt64")
    */
};
#>
// --------------------------------------------------------------------------------------------------------------------
// <copyright company="DHGMS Solutions" file="NumberTooHighException.cs">
//   Copyright 2004-<#=DateTime.Today.Year#> DHGMS Solutions.
//      
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//      
//   http://www.apache.org/licenses/LICENSE-2.0
//      
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
// </copyright>
// <summary>
//   Exceptions for when a number is too high
// </summary>
// --------------------------------------------------------------------------------------------------------------------

namespace Dhgms.DataManager.Model.Exception
{
<#
foreach(System.Collections.Generic.KeyValuePair<string, string> item in classes)
{
#>
    /// <summary>
    /// The number passed in was higher than the allowed maximum
    /// </summary>
    [System.Serializable]
    public class NumberTooHigh<#=item.Key#>Exception
        : System.Exception
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="NumberTooHigh<#=item.Key#>Exception" /> class.
        /// </summary>
        public NumberTooHigh<#=item.Key#>Exception()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="NumberTooHigh<#=item.Key#>Exception" /> class.
        /// </summary>
        /// <param name="message">Exception Message</param>
        public NumberTooHigh<#=item.Key#>Exception(string message)
            : base(message)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="NumberTooHigh<#=item.Key#>Exception" /> class.
        /// </summary>
        /// <param name="message">Exception Message</param>
        /// <param name="innerException">Inner Exception</param>
        public NumberTooHigh<#=item.Key#>Exception(
            string message,
            System.Exception innerException) : base(message, innerException)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="NumberTooHigh<#=item.Key#>Exception" /> class.
        /// </summary>
        /// <param name="parameterName">The name of the parameter causing the exception.</param>
        /// <param name="maximumValid">The maximum valid value.</param>
        /// <param name="actual">The actual value received.</param>
        public NumberTooHigh<#=item.Key#>Exception(
            string parameterName,
            <#=item.Value#> maximumValid,
            <#=item.Value#> actual)
            : base(parameterName + ": The number specified is too high. Maximum: " + maximumValid + ", Actual: " + actual)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="NumberTooHigh<#=item.Key#>Exception" /> class.
        /// </summary>
        /// <param name="info">The serialization information.</param>
        /// <param name="context">The streaming context.</param>
        protected NumberTooHigh<#=item.Key#>Exception(
            System.Runtime.Serialization.SerializationInfo info,
            System.Runtime.Serialization.StreamingContext context)
            : base(info, context)
        {
        }
    }

<#
}
#>
}
